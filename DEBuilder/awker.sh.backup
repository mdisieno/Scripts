#!/bin/bash
################################################################
# Awker
#
# Just a simple script to handle awk commands based on variables pushed.
# It then sets files within ./Files to the directories and such needed.
#
# By Michael Disieno
################################################################

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Variables
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fileToCheck=$1
Home="/home/$USER"
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Functions (WIP)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Puller(){
    local FileToCheck=$1
    local WhatToLookFor=$2
    local WhereToSave=$3

    awk '{`
        if($1 == "#REPO")
        { print $3 }
    }' $FileToCheck > ./Files/Repos 
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Checking and Cleaning Repo
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#gitRepo pull
awk '{
if($1 == "#REPO")
{ print $3 }
}' $fileToCheck > ./Files/Repos 

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#Folder Check
repoFile="./Files/Repos"
gitSSHRemovalLine="git@ssh.dev.azure.com:v3/gc2it-eng/"
lineCounter=0
# go through each line
awk -F'/' '{ print $3 }' $repoFile > ./Files/Directories

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Working Directory Cleaning and setting
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#StorageLocation
#awk '{
#if($1 == "#FOLDER")
#{ print $3 }
#    }' $fileToCheck > ./Files/WorkingDirectory

WorkingDirectory=$(awk '{
if($1 == "#FOLDER")
{ print $3 }
    }' $fileToCheck)



awk 'BEGIN {
    gsub("~",$USER) $WorkingDirectory
}'



#Check that things are Working
WorkingDirectory="$Home$WorkingDirectory" 
echo "$WorkingDirectory" > ./Files/WorkingDirectory
#echo $Home
#echo $WorkingDirectory
# remove the gitSSH...
# check folders



